import { Context } from 'koa';
import moment = require('moment-timezone');

import {
  getConcertsByDays,
  getConcertsByDaysString,
  getDailyConcerts,
  getWeeklyConcerts,
  getWeekString
} from './helpers';

export default async (ctx: Context) => {
  const {
    date,
    period
  } = ctx.query;
  const day = moment(date);
  let posterText = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω—Ü–µ—Ä—Ç–æ–≤';

  if (period === 'week') {
    const concerts = await getWeeklyConcerts(day);

    if (concerts.length) {
      const groups = getConcertsByDays(concerts);

      posterText = `ü•É –ê—Ñ–∏—à–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π –º–µ—Å—Ç–Ω—ã—Ö –º—É–∑—ã–∫–∞–Ω—Ç–æ–≤ –Ω–∞ ${getWeekString(day)} –æ—Ç @soundcheck_ural (Soundcheck ‚Äì –ú—É–∑—ã–∫–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞).

${getConcertsByDaysString(groups)}`;
    }
  } else {
    const concerts = await getDailyConcerts(day);

    if (concerts.length) {
      posterText = `ü•É –ê—Ñ–∏—à–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π –º–µ—Å—Ç–Ω—ã—Ö –º—É–∑—ã–∫–∞–Ω—Ç–æ–≤ –Ω–∞ ${day.format('DD MMM')} –æ—Ç @soundcheck_ural (Soundcheck ‚Äì –ú—É–∑—ã–∫–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞).`;
    }
  }

  ctx.body = posterText;
};
